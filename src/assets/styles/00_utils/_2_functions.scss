/* 
!! Gestion => COULEURS 
 */
@function lightness-shift($colour) {
    @if (lightness($colour) < 25%) {
        @return lighten($colour, 10%);
    } @else {
        @return lighten($colour, 10%);
    }
}
@function darken-shift($colour) {
    @if (lightness($colour) < 25%) {
        @return darken($colour, 10%);
    } @else {
        @return darken($colour, 10%);
    }
}

/*Gère parfaitement le mélange ALPHA SI RVB EST FOURNIS => VOIR  rvb-calculator
Utilisation : 
background-color: blend-colors($color-primary, black, 50%);
*/
@function blend-colors($color1, $color2, $weight) {
    @return mix($color1, $color2, $weight);
}

/*Gère très mal le mélange ALPHA
Utilisation : 
background-color: rvb-calculator($color-primary, yellow, 30);
*/
@function rvb-calculator($color1, $color2, $weight) {
    $weight: $weight / 100;
    $red1: red($color1);
    $green1: green($color1);
    $blue1: blue($color1);
    $alpha1: alpha($color1);
    $red2: red($color2);
    $green2: green($color2);
    $blue2: blue($color2);
    $alpha2: alpha($color2);

    $red: $red1 + ($red2 - $red1) * $weight;
    $green: $green1 + ($green2 - $green1) * $weight;
    $blue: $blue1 + ($blue2 - $blue1) * $weight;
    $alpha: $alpha1 + ($alpha2 - $alpha1) * $weight;

    @return rgba($red, $green, $blue, $alpha);
}

@function rgba-color($color, $alpha) {
    // Assurez-vous que $alpha est dans la plage de 0 à 1
    @if $alpha < 0 {
        $alpha: 0;
    } @else if $alpha > 1 {
        $alpha: 1;
    }

    // Convertir la couleur en RVB
    $red: red($color);
    $green: green($color);
    $blue: blue($color);

    // Retourner la couleur RVB avec l'alpha
    @return rgba($red, $green, $blue, $alpha);
}

@function invert-rgba($color) {
    $r: 255 - red($color);
    $g: 255 - green($color);
    $b: 255 - blue($color);
    $a: alpha($color);

    @return rgba($r, $g, $b, $a);
}

$backgroundColor: #f2f2fc;
$textColor: #ec1839; // Utilisation de la variable CSS --my-colorText avec une valeur de secours #000 en cas d'absence

// Fonction pour calculer la luminosité
@function calculateBrightness($color) {
    @return ((red($color) * 299) + (green($color) * 587) + (blue($color) * 114)) /
        1000;
}

$backgroundBrightness: calculateBrightness($backgroundColor);

// Définissez une luminosité de seuil pour basculer le contraste
$thresholdBrightness: 128;

// Ajustez le contraste en fonction de la luminosité de l'arrière-plan
$adjustedContrast: if(
    $backgroundBrightness < $thresholdBrightness,
    lighten($textColor, 20%),
    darken($textColor, 20%)
);

// Utilisez la couleur ajustée pour le texte
.text {
    color: $adjustedContrast;
}
